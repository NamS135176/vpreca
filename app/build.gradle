plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
}

// Creates a variable called keystorePropertiesFile, and initializes it to the
// keystore.properties file.
def keystorePropertiesFile = rootProject.file("keystore.properties")
def debugKeystorePropertiesFile = rootProject.file("debugKeystore.properties")
def securePropertiesFile = rootProject.file("secure.properties")
def privateKeyPemFile = rootProject.file("private_key.pem")

// Initializes a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
def debugKeystoreProperties = new Properties()

def secureProperties = new Properties()

// Loads the keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
debugKeystoreProperties.load(new FileInputStream(debugKeystorePropertiesFile))
secureProperties.load(new FileInputStream(securePropertiesFile))

def privateKeyPem = privateKeyPemFile.text.replaceAll("\\n", "")

android {
    compileSdk 32

    buildFeatures {

        dataBinding true

        // for view binding:
        // viewBinding true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        debug {
            keyAlias debugKeystoreProperties['keyAlias']
            keyPassword debugKeystoreProperties['keyPassword']
            storeFile file(debugKeystoreProperties['storeFile'])
            storePassword debugKeystoreProperties['storePassword']
        }
    }

    defaultConfig {
        applicationId "com.lifecard.vpreca"
        minSdk 16
        targetSdk 32
        versionCode 1
        versionName "1.0"
        multiDexEnabled = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        getByName("release") {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release

            buildConfigField("String", "SECURE_KEY_FILE_NAME", "\"${secureProperties['keystoreFileName']}\"")
            buildConfigField("String", "SECURE_KEY_PASSWORD", "\"${secureProperties['keystorePassword']}\"")
            buildConfigField("String", "SECURE_KEY_ALIAS", "\"${secureProperties['keystoreAlias']}\"")
            buildConfigField("String", "GoogleApiKey", "\"${secureProperties['GoogleApiKey']}\"")
            buildConfigField("String", "privateKeyPem", "\"${privateKeyPem}\"")
        }

        getByName("debug") {
            signingConfig signingConfigs.debug

            buildConfigField("String", "SECURE_KEY_FILE_NAME", "\"${secureProperties['keystoreFileName']}\"")
            buildConfigField("String", "SECURE_KEY_PASSWORD", "\"${secureProperties['keystorePassword']}\"")
            buildConfigField("String", "SECURE_KEY_ALIAS", "\"${secureProperties['keystoreAlias']}\"")
            buildConfigField("String", "GoogleApiKey", "\"${secureProperties['GoogleApiKey']}\"")
            buildConfigField("String", "privateKeyPem", "\"${privateKeyPem}\"")
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_16
        targetCompatibility JavaVersion.VERSION_16
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
    }
    buildToolsVersion '32.0.0'

    // Specifies one flavor dimension.
    flavorDimensions += "version"
    productFlavors {
        create("Staging") {
            dimension = "version"
        }
        create("QA") {
            // Assigns this product flavor to the "version" flavor dimension.
            // If you are using only one dimension, this property is optional,
            // and the plugin automatically assigns all the module's flavors to
            // that dimension.
            dimension = "version"
            versionNameSuffix = "-qa"
        }
    }

}

dependencies {
    def camerax_version = "1.2.0-alpha01"

    implementation("androidx.multidex:multidex:2.0.1")

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.0-alpha04'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'

    //camera.x
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    implementation 'androidx.annotation:annotation:1.4.0'

    //vá»‰ewpager2
    implementation("androidx.viewpager2:viewpager2:1.1.0-beta01")

    //indicator
    implementation "ru.tinkoff.scrollingpagerindicator:scrollingpagerindicator:1.2.1"

    //hint dagger
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    //firebase
    implementation platform('com.google.firebase:firebase-bom:29.3.1')
//    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    //event bus
    implementation 'org.greenrobot:eventbus:3.3.1'

    //joda time
    implementation 'net.danlew:android.joda:2.10.14'

    //biometric
    implementation 'androidx.biometric:biometric:1.2.0-alpha04'

    implementation "com.github.skydoves:powerspinner:1.2.2"

    implementation 'com.google.mlkit:text-recognition:16.0.0-beta4'

    implementation 'androidx.webkit:webkit:1.4.0'
    implementation 'com.scottyab:rootbeer-lib:0.1.0'
    implementation 'com.otaliastudios:cameraview:2.7.2'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}